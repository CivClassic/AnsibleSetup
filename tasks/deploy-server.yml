---
#task to deploy a single shard

- name: "Create {{ full_server_folder }} Directory"
  file: "path={{ full_server_folder }} state=directory owner={{ username }} mode=0755"

- name: "Create {{ servername }} Plugins Directory"
  file: "path={{ full_server_folder }}/plugins state=directory owner={{ username }} mode=0755"

- name: "Copy {{ servername }} top level public templates"
  template: "src={{ templates }}/public/{{ item }}.j2 dest={{ full_server_folder }}/{{ item }} \
             owner={{ username }} mode='u=rw,g=r,o=r'"
  with_items: "{{ top_level_templates }}"

- name: Make startup script executable
  file: dest={{ full_server_folder }}/{{ startup_script }} mode=u+x

- name: "Copy {{ servername }} top level private templates"
  template: "src={{ templates }}private/{{ item }}.j2 dest={{ full_server_folder }}/{{ item }} \
             owner={{ username }} mode='u=rw,g=r,o=r'"
  with_items: "{{ secret_top_level_templates }}"
  when: groups["secret_top_level_templates"] is defined

- name: Deploy Spigot
  include: "tasks/deploy-spigot.yml"
  when: not use_paper

- name: Deploy Paper
  include: "tasks/deploy-paper.yml"
  when: use_paper

- name: Deploy Tuinity
  include: "tasks/deploy-tuinity.yml"
  when: not use_paper and use_tuinity

- name: "Clean existing Jarfiles"
  shell: "rm {{ full_server_folder }}/plugins/*.jar"
  ignore_errors: true

- name: "Deploy {{ servername }} plugins"
  include: "tasks/deploy-plugin.yml plugin_name={{ server_plugin_name }} abs_plugin_dir={{ full_server_folder }}/plugins rel_jar_path=plugins rel_config_path=plugins"
  with_items: "{{ plugins }}"
  loop_control:
    loop_var: server_plugin_name

- name: "Deploy Bungee"
  include: "tasks/deploy-bungee.yml"
  when: use_bungee